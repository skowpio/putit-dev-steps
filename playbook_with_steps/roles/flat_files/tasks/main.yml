---
- name: Get deploy user group name
  command: "id -g -n {{ ansible_ssh_user }}" 
  register: deploy_user_group_name_register
  changed_when: false

- name: Set deploy user name 
  set_fact: 
    deploy_user_name: "{{ ansible_ssh_user }}"

- name: Set deploy user group name 
  set_fact: 
    deploy_group_name: "{{ deploy_user_group_name_register.stdout }}"

- name: Create upload dir 
  file: 
    path: "/tmp/uploaded_artifacts"
    state: directory 
    mode: 0755
    owner: "{{ deploy_user_name }}"
    group: "{{ deploy_group_name }}"

- name: Create deploy/install dir 
  file: 
    path: "{{ item.value.properties.install_dir }}/{{ansible_ssh_user}}"
    state: directory 
    mode: 0755
    owner: "{{ deploy_user_name }}"
    group: "{{ deploy_group_name }}"
  with_dict: "{{ artifacts }}"

- name: "Deploying files into server"
  copy: 
    src: "{{ item.value.properties.source_path }}"
    dest: "{{ item.value.properties.install_dir }}/{{ansible_ssh_user}}"
    owner: "{{ deploy_user_name }}"
    group: "{{ deploy_group_name }}"
    mode: 0644 
  with_dict: "{{ artifacts }}"

# get templates file from this step also test vars from this step - in file content var is in use
- name: Create config file from template for all artifacts 
  template: 
    src: "templates/putit_test.conf.j2"
    dest: "{{ item.value.properties.install_dir }}/putit_test.conf"
    owner: "{{ deploy_user_name  }}"
    group: "{{ deploy_group_name }}"
    mode: 0644
  with_dict: "{{ artifacts }}"

# get files file from this step !
- name: Create file from files for all artifacts 
  copy: 
    src: "files/putit_test.file"
    dest: "{{ item.value.properties.install_dir }}"
    owner: "{{ deploy_user_name  }}"
    group: "{{ deploy_group_name }}"
    mode: 0644
  with_dict: "{{ artifacts }}"



---
- name: Kill all java
  shell: 'killall java' 
  ignore_errors: true

- name: Get deploy user group name
  command: "id -g -n {{ ansible_ssh_user }}" 
  register: deploy_user_group_name_register
  changed_when: false

- name: Set deploy user name 
  set_fact: 
    deploy_user_name: "{{ ansible_ssh_user }}"

- name: Set deploy user group name 
  set_fact: 
    deploy_group_name: "{{ deploy_user_group_name_register.stdout }}"

- name: Username
  debug: msg="Deploy username is {{ ansible_ssh_user }}"

- name: Create upload dir 
  file: 
    path: "/tmp/uploaded_artifacts/{{ deploy_user_name }}"
    state: directory 
    mode: 0777
    owner: "{{ deploy_user_name }}"
    group: "{{ deploy_group_name }}"
  ignore_errors: true

- name: Create deploy/install dir 
  file: 
    path: "{{ item.value.properties.install_dir }}"
    state: directory 
    mode: 0755
    owner: "{{ deploy_user_name }}"
    group: "{{ deploy_group_name }}"
  with_dict: "{{ artifacts }}"

- name: "Deploying files into server"
  copy: 
    src: "{{ item.value.properties.source_path }}"
    dest: "{{ item.value.properties.install_dir }}"
    owner: "{{ deploy_user_name }}"
    group: "{{ deploy_group_name }}"
    mode: 0644 
  with_dict: "{{ artifacts }}"

- name: "Unzip artifacts"
  unarchive:
    src: "{{ item.value.properties.install_dir }}/{{ item.value.properties.artifact_name }}"
    dest: "{{ item.value.properties.install_dir }}"
    remote_src: true
  with_dict: "{{ artifacts }}"

- supervisorctl:
    name: 'app-jenkins-custom-deploy'
    state: stopped
  when: ansible_ssh_user == 'test-jenkins' or ansible_ssh_user == 'prod-jenkins'

- name: "Remove symlink"
  file:
   path: "{{ item.value.properties.install_dir }}/current"
   state: absent
  with_dict: "{{ artifacts }}"

- name: "Create symlink"
  file: 
    src: "{{ item.value.properties.install_dir }}/{{ item.value.properties.artifact_with_version }}"
    dest: "{{ item.value.properties.install_dir }}/current"
    state: link
  with_dict: "{{ artifacts }}"

# get templates file from this step also test vars from this step - in file content var is in use
- name: Create config file from template for all artifacts 
  template: 
    src: "templates/putit_test.conf.j2"
    dest: "{{ item.value.properties.install_dir }}/putit_test.conf"
    owner: "{{ deploy_user_name  }}"
    group: "{{ deploy_group_name }}"
    mode: 0644
  with_dict: "{{ artifacts }}"

# get files file from this step !
- name: Create file from files for all artifacts 
  copy: 
    src: "files/putit_test.file"
    dest: "{{ item.value.properties.install_dir }}"
    owner: "{{ deploy_user_name  }}"
    group: "{{ deploy_group_name }}"
    mode: 0644
  with_dict: "{{ artifacts }}"

- name: Start script copy 
  copy:
    src: "files/{{ ansible_ssh_user }}-start.sh" 
    dest: "{{ item.value.properties.install_dir }}/current/super_start.sh"
    mode: 0755
  with_dict: "{{ artifacts }}"

- name: Set execution perms 
  file: 
    dest: "{{ item.value.properties.install_dir }}/current/stop.sh"
    mode: 0755
  with_dict: "{{ artifacts }}"


- supervisorctl:
    name: 'app-jenkins-custom-deploy'
    state: started
  when: ansible_ssh_user == 'test-jenkins' or ansible_ssh_user == 'prod-jenkins'
